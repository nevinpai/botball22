#include "createDrive.h"
#include <kipr/botball.h>
#include <kipr/wombat.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#define LEFT 0
#define RIGHT 1
#define CLAW 2

#define WRIST 1

#define ET 0

#define GRABBOT 2047
#define VERT 1500

void slow_servo(int port, int pos);
void setup();
void grabBot();


int main() {
  	
	//SETS UP THE CREATE FOR THE START OF THE MATCH.
	setup();
	
	//DRIVES FORWARD UNTIL THE TOUCH SENSOR HITS THE SECOND POLE.
    calc_dev();
  
    int i = 0;
	while(i < 2) {
          if(analog(ET) > 1400) {
               while(analog(ET) > 1400) {
                msleep(1);
         	}
              i++;
          }
          printf("%d", i);
		  create_forward_gyro(-100, 0);
          msleep(1);
	}
  
  
    create_forward_gyro(100, 0);
    msleep(500);
                        
	//Turn towards Botguy
	create_drive_direct(-100, 100);
	msleep(1600);
    
    //Squaring up towards the center
    msleep(100);
    create_forward_gyro(-150, 0);
    msleep(5000);
    
    //Driving back in position to pick up Botguy
    msleep(200);
    create_forward_gyro(50, 0);
    msleep(1000);
    
    //Heading towards Transport for sqauring up!
    msleep(2000);
    create_forward_gyro(150, 0);
    msleep(1000);
    create_drive_direct(100, -100);
    msleep(1700);
    create_forward_gyro(-200, 0);
    msleep(5000);
    
    //Heading towards airlock!
    create_forward_gyro(100, 0);
    msleep(850);
    create_drive_direct(100, -100);
    msleep(1600);
    create_forward_gyro(-100, 0);
    msleep(2650);
    create_left(63, 100);

    
    
    
    return 0;


}

/*
void slow_servo(int port, int pos) {
 	int currentPos = get_servo_position(port);
    int amtIncrement = 0;
    amtIncrement = (pos-currentPos)/20;
    int i = 0;
    for(i; i < 20; i++) {
        currentPos += amtIncrement;
        set_servo_position(port, currentPos);
        msleep(100);
    }


void grabBot() {
	
	set_servo_position()

}

*/

void setup() {
	
    create_connect();
    enable_servos();
    //set_servo_position(LEFT,);
    //set_servo_position(RIGHT,);
    //set_servo_position(CLAW,);
    //motor(WRIST,);
    
    msleep(500);

}

void stop()
{
    create_disconnect();
    disable_servos();
    ao();
}

