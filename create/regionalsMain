#include "createDrive.h"
#include <kipr/botball.h>
#include <kipr/wombat.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#define LEFT 0
#define RIGHT 1
#define CLAW 2
#define WRIST 3

#define ET 0

//For forearms
#define VERTRIGHT 1456
#define VERTLEFT 514

//For Claw
#define CLOSE 2047
#define OPEN 1225

//For Wrist
#define GRAB 500
#define DOWN 1000
#define FRONT 50



void setup();
void grabBot();
void slowServo(int port, int position);


int main() {
  	
	//SETS UP THE CREATE FOR THE START OF THE MATCH.
	setup();
	
	//DRIVES FORWARD UNTIL THE TOUCH SENSOR HITS THE SECOND POLE.
    calc_dev();
    int i = 0;
	while(i < 2) {
          if(analog(ET) > 1400 && analog(ET) < 1700) {
               while(analog(ET) > 1400 && analog(ET) < 1700) {
                msleep(1);
         	}
              i++;
          }

          //printf("%d", i);
		  create_forward_gyro(-100, 0);
          msleep(1);
	}
  
  
    //Moves a little bit back to line up properly with center
    create_forward_gyro(100, 0);
    msleep(550);
                        
	//Turn towards Botguy(@ the second pole)
	create_drive_direct(-100, 100);
	msleep(1600);
    
    //Squaring up towards the center(driving towards center)
    msleep(100);
    create_forward_gyro(-150, 0);
    msleep(5500);

    //Grabbing botguy
   	grabBot();
    
    //Heading towards Transport for sqauring up!
    msleep(2000);
    create_forward_gyro(150, 0);
    msleep(1100);
    create_drive_direct(100, -100);
    msleep(1700);
    create_forward_gyro(-200, 0);
    msleep(5000);
    
    //Heading towards airlock!
    create_forward_gyro(100, 0);
    msleep(850);
    create_drive_direct(100, -100);
    msleep(1600);
    create_forward_gyro(-100, 0);
    msleep(2650);
    create_left(63, 100);
    
    return 0;


}

void slowServo(int port, int position) {
    int currentPos = get_servo_position(port);
    int amtIncrement = 0;
    amtIncrement = (position-currentPos)/20;
    int i = 0;
    for(i; i < 20; i++) {
        currentPos += amtIncrement;
        set_servo_position(port, currentPos);
        msleep(100);
    }
}


void grabBot() { 

    //Driving back in position to pick up Botguy(in front of Botguy)
    create_forward_gyro(50, 0);
    msleep(1000);
	
    //Positioning the robot and arm to pick up Botguy
	msleep(150);
	dual_servos(500, 5); 
	msleep(1000);
	set_servo_position(WRIST, GRAB);
	msleep(100);
	slowServo(CLAW, OPEN);
	create_drive_direct(25, 25);
	msleep(50);

    //Actually grabbing Botguy
	set_servo_position(CLAW, CLOSE);
	msleep(300);
	set_servo_position(WRIST, BACK);
	
}


void placeBot() {
	
	msleep(100);
	dual_servos(15, 30);
	set_servo_position(WRIST, FRONT);
	msleep(50);
	set_servo_position(CLAW, OPEN);
	msleep(50);
	set_servo_position(CLAW, OPEN - 30);
	dual_servos(-150, 5);


}

void setup() {
	
    create_connect();
    enable_servos();
    //set_servo_position(LEFT,);
    //set_servo_position(RIGHT,);
    //set_servo_position(CLAW, CLOSE);
    //set_servo_position(WRIST,);
    
    msleep(500);

}

void stop()
{
    create_disconnect();
    disable_servos();
    ao();
}

